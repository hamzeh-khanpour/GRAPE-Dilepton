*     File ep_eXee/aep_eXeemptbl.f : Sat Mar 18 19:45:45 2000
*
*     Generated by GRACE (Fortran source code generator)
*         Ver.2.1.5(2) 1998/05/11
*
*     (c)copyright 1990-1998 Minami-Tateya Group, Japan
*-----------------------------------------------------------------------
*
************************************************************************
      subroutine aep_eXeemptbl
      implicit real*8(a-h,o-z)
      include 'inclep_eXee1.h'
      include 'incl2.h'
      include 'inclk.h'
      include 'inclep_eXeep.h'
*-----------------------------------------------------------------------
      integer     mu
      complex*16  agcr(0:lep_eXeeag-1,4)
       common /RESO/agcr

      jgraph = 0

* External lines
      call smextf(lincom,amp,pfep_eXee2,ptep_eXee2v,cfep_eXee2v)
      exep_eXee2v(1) = lprtcl
      call smextf(loutgo,amlp(1),pfep_eXee4,ptep_eXee4m,cfep_eXee4m)
      exep_eXee4m(1) = lantip
      call smextf(loutgo,amass1(3),pfep_eXee9,ptep_eXee9x,cfep_eXee9x)
      exep_eXee9x(1) = lprtcl
      call smextf(lincom,amlp(1),pfep_eXee17,ptep_eXee17m,cfep_eXee17m)
      exep_eXee17m(1) = lantip
      call smextf(loutgo,amlp(1),pfep_eXee33,ptep_eXee33m,cfep_eXee33m)
      exep_eXee33m(1) = lprtcl
      call smextf(lincom,amlp(1),pfep_eXee62,ptep_eXee62m,cfep_eXee62m)
      exep_eXee62m(1) = lantip


* Buffer clear for amplitude
      do 200 ih = 0 , lep_eXeeag-1
         agc(ih) = (0.0d0,0.0d0)
         do mu=1,4
           agcr(ih,mu) = (0.0d0,0.0d0)
         enddo
  200 continue


      call aep_eXeempt0

      return
      end
************************************************************************
      subroutine aep_eXeempt0
      implicit real*8(a-h,o-z)

      include 'inclep_eXee1.h'
      include 'incl2.h'
      include 'inclk.h'
*-----------------------------------------------------------------------
      if(jselg(1) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 1
        call aep_eXeeg1
      endif

      if(jselg(2) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 2
        call aep_eXeeg2
      endif

      if(jselg(3) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 3
        call aep_eXeeg3
      endif

      if(jselg(4) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 4
        call aep_eXeeg4
      endif

      if(jselg(5) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 5
        call aep_eXeeg5
      endif

      if(jselg(6) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 6
        call aep_eXeeg6
      endif

      if(jselg(7) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 7
        call aep_eXeeg7
      endif

      if(jselg(8) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 8
        call aep_eXeeg8
      endif

      if(jselg(9) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 9
        call aep_eXeeg9
      endif

      if(jselg(10) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 10
        call aep_eXeeg10
      endif

      if(jselg(11) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 11
        call aep_eXeeg11
      endif

      if(jselg(12) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 12
        call aep_eXeeg12
      endif

      if(jselg(13) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 13
        call aep_eXeeg13
      endif

      if(jselg(14) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 14
        call aep_eXeeg14
      endif

      if(jselg(15) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 15
        call aep_eXeeg15
      endif

      if(jselg(16) .ne. 0) then
        jgraph = jgraph + 1
        igraph(jgraph) = 16
        call aep_eXeeg16
      endif

      return
      end
